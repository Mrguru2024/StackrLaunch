Add the popup to your website
To open a Tally popup, paste the following code snippet in the <head> section of your website.
<script async src="https://tally.so/widgets/embed.js"></script>
Then to open the popup on clicking a button, you need to add the following data-tally attributes to an existing button on your page. You can add these attributes to any clickable element - button, div, etc.
// Data attributes
data-tally-open="3NO0eG" data-tally-width="420" data-tally-emoji-text="ðŸ‘‹" data-tally-emoji-animation="wave" data-tally-auto-close="0"

// Example
<button data-tally-open="3NO0eG" data-tally-width="420" data-tally-emoji-text="ðŸ‘‹" data-tally-emoji-animation="wave" data-tally-auto-close="0">Click me</button>
Alternatively, you can open the popup by clicking on a link with a custom URL hash. Add the URL below to a link on your page to open the popup.
// Link href attribute
#tally-open=3NO0eG&tally-width=420&tally-emoji-text=ðŸ‘‹&tally-emoji-animation=wave&tally-auto-close=0

// Example
<a href="#tally-open=3NO0eG&tally-width=420&tally-emoji-text=ðŸ‘‹&tally-emoji-animation=wave&tally-auto-close=0">Click me</a>
Save website page and query parameters
Your website's page and all query parameters will be automatically forwarded to the Tally popup and could be saved using hidden fields. For example, if your page's URL looks like the one below and you have hidden fields for originPage, ref and email, you will see originPage=/register, ref=downloads and email=alice@example.com in your form submissions.
https://company.com/register?ref=downloads&email=alice@example.com
If you are opening the popup on button click via data attributes, all data attributes will be automatically forwarded to the popup. The example below sets 2 data attributes which can be used as hidden fields: ref and email.
<button data-tally-open="3NO0eG" data-ref="downloads" data-email="alice@example.com">Click me</button>
If you are opening the popup on button click via custom URL hash, all URL parameters will be automatically forwarded to the popup. The example below sets 2 parameters which can be used as hidden fields: ref and email.
<a href="#tally-open=3NO0eG&ref=downloads&email=alice@example.com">Click me</a>
Use JavaScript
You can open and close popups using JavaScript via the window.Tally object. It comes in handy when you want to define your own business logic on when to open a certain popup. Take a look at the instructions below and share them with your developers.
// Include the Tally widget script in the <head> section of your page
<script src="https://tally.so/widgets/embed.js"></script>

// You can find the form ID in the URL of this page
// https://tally.so/forms/3NO0eG/share
const formId = '3NO0eG';

// Open the popup
Tally.openPopup(formId, options);

// Available options
type PopupOptions = {
  key?: string;
  layout?: 'default' | 'modal';
  width?: number;
  alignLeft?: boolean;
  hideTitle?: boolean;
  overlay?: boolean;
  emoji?: {
    text: string;
    animation: 'none' | 'wave' | 'tada' | 'heart-beat' | 'spin' | 'flash' | 'bounce' | 'rubber-band' | 'head-shake';
  };
  autoClose?: number;
  showOnce?: boolean;
  doNotShowAfterSubmit?: boolean;
  customFormUrl?: string;
  hiddenFields?: {
    [key: string]: any,
  };
  onOpen?: () => void;
  onClose?: () => void;
  onPageView?: (page: number) => void;
  onSubmit?: (payload: any) => void;
};

// Example: open a popup with default options
Tally.openPopup('3NO0eG');

// Example: opening a popup as a centered modal
Tally.openPopup('3NO0eG', {
  layout: 'modal', // Open as a centered modal
  width: 700, // Set the width of the modal
  autoClose: 5000, // Close the popup 5 seconds after form was submitted (in ms)
});

// Example: set custom hidden fields
Tally.openPopup('3NO0eG', {
  hiddenFields: {
    ref: 'downloads',
    email: 'alice@example.com'
  }
});

// Example: customization via custom domain URL + code injection
Tally.openPopup('3NO0eG', {
  customFormUrl: 'https://yourdomain.com/form',
});

// Example: use callback functions to handle events
Tally.openPopup('3NO0eG', {
  onOpen: () => {
    // The popup was opened, mark the form as seen
    // ...
  },
  onClose: () => {
    // The popup was closed
    // ...
  },
  onPageView: (page: number) => {
    // Log the page view
    // ...
  },
  onSubmit: (payload: any) => {
    // Form was submitted, use the answers payload in your application
    // ...
  }
});

// Close the popup
Tally.closePopup('3NO0eG');